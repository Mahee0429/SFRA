<?xml version="1.0" encoding="UTF-8" ?>
<?demandware-pipeline version="2.0"?>

<pipeline type="view">
  <branch basename="_ANONYMOUS_BRANCH_1">
    <segment>
      <node>
        <text-node>
          <description>Checks authentication and synchronization DW Basket and Affirm Basket</description>
        </text-node>
        <node-display x="1" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="CheckBasket">
    <segment>
      <node>
        <start-node call-mode="private" name="CheckBasket" secure="false"/>
        <node-display x="1" y="2"/>
      </node>
      <simple-transition/>
      <node>
        <call-node start-name-ref="Affirm-OnlineStatus"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="offline">
          <transition target-connector="in2" target-path="./+1">
            <transition-display>
              <bend-point relative-to="source" x="2" y="1"/>
              <bend-point relative-to="source" x="2" y="1"/>
            </transition-display>
          </transition>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node custom-name="Map values" pipelet-name="Assign" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <key-binding alias="CurrentHttpParameterMap.checkout_token.stringValue" key="From_0"/>
          <key-binding alias="AffirmToken" key="To_0"/>
          <key-binding alias="CurrentForms.billing.paymentMethods.selectedPaymentMethodID.value" key="From_1"/>
          <key-binding alias="SelectedPaymentMethod" key="To_1"/>
          <key-binding alias="null" key="From_2"/>
          <key-binding alias="null" key="To_2"/>
          <key-binding alias="null" key="From_3"/>
          <key-binding alias="null" key="To_3"/>
          <key-binding alias="null" key="From_4"/>
          <key-binding alias="null" key="To_4"/>
          <key-binding alias="null" key="From_5"/>
          <key-binding alias="null" key="To_5"/>
          <key-binding alias="null" key="From_6"/>
          <key-binding alias="null" key="To_6"/>
          <key-binding alias="null" key="From_7"/>
          <key-binding alias="null" key="To_7"/>
          <key-binding alias="null" key="From_8"/>
          <key-binding alias="null" key="To_8"/>
          <key-binding alias="null" key="From_9"/>
          <key-binding alias="null" key="To_9"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <decision-node condition-key="SelectedPaymentMethod == 'Affirm'" condition-operator="expr"/>
        <node-display x="0" y="1"/>
        <branch basename="b3" source-connector="yes">
          <transition target-connector="in"/>
          <segment>
            <node>
              <decision-node condition-key="!empty(AffirmToken)" condition-operator="expr"/>
              <node-display x="0" y="1"/>
              <branch basename="b2" source-connector="yes">
                <transition target-connector="in">
                  <transition-display>
                    <bend-point relative-to="source" x="0" y="1"/>
                  </transition-display>
                </transition>
                <segment>
                  <node>
                    <pipelet-node custom-name="Auth call to Affirm" pipelet-name="Assign" pipelet-set-identifier="bc_api">
                      <config-property key="Transactional" value="false"/>
                      <key-binding alias="require('*/cartridge/scripts/affirm').order.authOrder(AffirmToken)" key="From_0"/>
                      <key-binding alias="AffirmResponse" key="To_0"/>
                      <key-binding alias="null" key="From_1"/>
                      <key-binding alias="null" key="To_1"/>
                      <key-binding alias="null" key="From_2"/>
                      <key-binding alias="null" key="To_2"/>
                      <key-binding alias="null" key="From_3"/>
                      <key-binding alias="null" key="To_3"/>
                      <key-binding alias="null" key="From_4"/>
                      <key-binding alias="null" key="To_4"/>
                      <key-binding alias="null" key="From_5"/>
                      <key-binding alias="null" key="To_5"/>
                      <key-binding alias="null" key="From_6"/>
                      <key-binding alias="null" key="To_6"/>
                      <key-binding alias="null" key="From_7"/>
                      <key-binding alias="null" key="To_7"/>
                      <key-binding alias="null" key="From_8"/>
                      <key-binding alias="null" key="To_8"/>
                      <key-binding alias="null" key="From_9"/>
                      <key-binding alias="null" key="To_9"/>
                    </pipelet-node>
                    <node-display x="0" y="1"/>
                  </node>
                  <simple-transition/>
                  <node>
                    <decision-node condition-key="!empty(AffirmResponse) &amp;&amp; !AffirmResponse.error" condition-operator="expr"/>
                    <node-display x="0" y="2"/>
                    <branch basename="b2" source-connector="yes">
                      <transition target-connector="in">
                        <transition-display>
                          <bend-point relative-to="source" x="0" y="1"/>
                        </transition-display>
                      </transition>
                      <segment>
                        <node>
                          <pipelet-node custom-name="Sync Basket with Affirm Response" pipelet-name="Assign" pipelet-set-identifier="bc_api">
                            <config-property key="Transactional" value="false"/>
                            <key-binding alias="require('*/cartridge/scripts/affirm').basket.syncBasket(Basket,AffirmResponse.response)" key="From_0"/>
                            <key-binding alias="AffirmStatus" key="To_0"/>
                            <key-binding alias="null" key="From_1"/>
                            <key-binding alias="null" key="To_1"/>
                            <key-binding alias="null" key="From_2"/>
                            <key-binding alias="null" key="To_2"/>
                            <key-binding alias="null" key="From_3"/>
                            <key-binding alias="null" key="To_3"/>
                            <key-binding alias="null" key="From_4"/>
                            <key-binding alias="null" key="To_4"/>
                            <key-binding alias="null" key="From_5"/>
                            <key-binding alias="null" key="To_5"/>
                            <key-binding alias="null" key="From_6"/>
                            <key-binding alias="null" key="To_6"/>
                            <key-binding alias="null" key="From_7"/>
                            <key-binding alias="null" key="To_7"/>
                            <key-binding alias="null" key="From_8"/>
                            <key-binding alias="null" key="To_8"/>
                            <key-binding alias="null" key="From_9"/>
                            <key-binding alias="null" key="To_9"/>
                          </pipelet-node>
                          <node-display x="0" y="1"/>
                        </node>
                        <simple-transition/>
                        <node>
                          <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                            <config-property key="Transactional" value="true"/>
                            <key-binding alias="AffirmResponse.response.id" key="From_0"/>
                            <key-binding alias="session.privacy.affirmResponseID" key="To_0"/>
                            <key-binding alias="AffirmResponse.response.events[0].id" key="From_1"/>
                            <key-binding alias="session.privacy.affirmFirstEventID" key="To_1"/>
                            <key-binding alias="AffirmResponse.response.amount" key="From_2"/>
                            <key-binding alias="session.privacy.affirmAmount" key="To_2"/>
                            <key-binding alias="null" key="From_3"/>
                            <key-binding alias="null" key="To_3"/>
                            <key-binding alias="null" key="From_4"/>
                            <key-binding alias="null" key="To_4"/>
                            <key-binding alias="null" key="From_5"/>
                            <key-binding alias="null" key="To_5"/>
                            <key-binding alias="null" key="From_6"/>
                            <key-binding alias="null" key="To_6"/>
                            <key-binding alias="null" key="From_7"/>
                            <key-binding alias="null" key="To_7"/>
                            <key-binding alias="null" key="From_8"/>
                            <key-binding alias="null" key="To_8"/>
                            <key-binding alias="null" key="From_9"/>
                            <key-binding alias="null" key="To_9"/>
                          </pipelet-node>
                          <node-display x="0" y="1"/>
                        </node>
                        <simple-transition/>
                        <node>
                          <decision-node condition-key="!AffirmStatus.isError()" condition-operator="expr"/>
                          <node-display x="0" y="1"/>
                          <branch basename="b2" source-connector="yes">
                            <transition target-connector="in">
                              <transition-display>
                                <bend-point relative-to="source" x="0" y="1"/>
                              </transition-display>
                            </transition>
                            <segment>
                              <node>
                                <end-node/>
                                <node-display x="0" y="1"/>
                              </node>
                            </segment>
                          </branch>
                        </node>
                        <simple-transition/>
                        <node>
                          <pipelet-node custom-name="Void call to Affirm" pipelet-name="Assign" pipelet-set-identifier="bc_api">
                            <config-property key="Transactional" value="true"/>
                            <key-binding alias="require('*/cartridge/scripts/affirm').order.voidOrder(AffirmResponse.response.id)" key="From_0"/>
                            <key-binding alias="doIt" key="To_0"/>
                            <key-binding alias="null" key="From_1"/>
                            <key-binding alias="null" key="To_1"/>
                            <key-binding alias="null" key="From_2"/>
                            <key-binding alias="null" key="To_2"/>
                            <key-binding alias="null" key="From_3"/>
                            <key-binding alias="null" key="To_3"/>
                            <key-binding alias="null" key="From_4"/>
                            <key-binding alias="null" key="To_4"/>
                            <key-binding alias="null" key="From_5"/>
                            <key-binding alias="null" key="To_5"/>
                            <key-binding alias="null" key="From_6"/>
                            <key-binding alias="null" key="To_6"/>
                            <key-binding alias="null" key="From_7"/>
                            <key-binding alias="null" key="To_7"/>
                            <key-binding alias="null" key="From_8"/>
                            <key-binding alias="null" key="To_8"/>
                            <key-binding alias="null" key="From_9"/>
                            <key-binding alias="null" key="To_9"/>
                          </pipelet-node>
                          <node-display orientation="horizontal" x="1" y="0"/>
                        </node>
                        <transition target-connector="in2" target-path="../../+1"/>
                      </segment>
                    </branch>
                  </node>
                  <simple-transition>
                    <transition-display>
                      <bend-point relative-to="source" x="2" y="0"/>
                      <bend-point relative-to="target" x="0" y="-1"/>
                    </transition-display>
                  </simple-transition>
                  <node>
                    <end-node name="error"/>
                    <node-display x="1" y="1"/>
                  </node>
                </segment>
              </branch>
            </node>
            <transition target-connector="in1" target-path="./+1">
              <transition-display>
                <bend-point relative-to="source" x="4" y="0"/>
              </transition-display>
            </transition>
          </segment>
          <segment>
            <node>
              <join-node/>
              <node-display x="2" y="5"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="2"/>
              </transition-display>
            </simple-transition>
            <node>
              <end-node name="error"/>
              <node-display x="0" y="2"/>
            </node>
          </segment>
        </branch>
      </node>
      <transition target-connector="in1" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="1" y="0"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="1" y="0"/>
        </transition-display>
      </simple-transition>
      <node>
        <end-node/>
        <node-display orientation="horizontal" x="1" y="0"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_3">
    <segment>
      <node>
        <text-node>
          <description>Redirects customer to affirm's checkout if affirm is enabled and there is no gift certificates in basket</description>
        </text-node>
        <node-display x="4" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="Redirect">
    <segment>
      <node>
        <start-node call-mode="private" name="Redirect" secure="false"/>
        <node-display x="4" y="2"/>
      </node>
      <simple-transition/>
      <node>
        <call-node start-name-ref="Cart-GetExistingBasket"/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node custom-name="Map values" pipelet-name="Assign" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <key-binding alias="CurrentHttpParameterMap.checkout_token.stringValue" key="From_0"/>
          <key-binding alias="AffirmToken" key="To_0"/>
          <key-binding alias="CurrentForms.billing.paymentMethods.selectedPaymentMethodID.value" key="From_1"/>
          <key-binding alias="SelectedPaymentMethod" key="To_1"/>
          <key-binding alias="null" key="From_2"/>
          <key-binding alias="null" key="To_2"/>
          <key-binding alias="null" key="From_3"/>
          <key-binding alias="null" key="To_3"/>
          <key-binding alias="null" key="From_4"/>
          <key-binding alias="null" key="To_4"/>
          <key-binding alias="null" key="From_5"/>
          <key-binding alias="null" key="To_5"/>
          <key-binding alias="null" key="From_6"/>
          <key-binding alias="null" key="To_6"/>
          <key-binding alias="null" key="From_7"/>
          <key-binding alias="null" key="To_7"/>
          <key-binding alias="null" key="From_8"/>
          <key-binding alias="null" key="To_8"/>
          <key-binding alias="null" key="From_9"/>
          <key-binding alias="null" key="To_9"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <decision-node condition-key="SelectedPaymentMethod == 'Affirm'" condition-operator="expr"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="yes">
          <transition target-connector="in"/>
          <segment>
            <node>
              <decision-node condition-key="empty(AffirmToken)" condition-operator="expr"/>
              <node-display x="0" y="1"/>
              <branch basename="b2" source-connector="yes">
                <transition target-connector="in"/>
                <segment>
                  <node>
                    <pipelet-node custom-name="Create Payment Instrument" pipelet-name="Assign" pipelet-set-identifier="bc_api">
                      <config-property key="Transactional" value="true"/>
                      <key-binding alias="null" key="From_3"/>
                      <key-binding alias="null" key="To_3"/>
                      <key-binding alias="null" key="From_4"/>
                      <key-binding alias="null" key="To_4"/>
                      <key-binding alias="null" key="From_5"/>
                      <key-binding alias="null" key="To_5"/>
                      <key-binding alias="null" key="From_6"/>
                      <key-binding alias="null" key="To_6"/>
                      <key-binding alias="null" key="From_7"/>
                      <key-binding alias="null" key="To_7"/>
                      <key-binding alias="null" key="From_8"/>
                      <key-binding alias="null" key="To_8"/>
                      <key-binding alias="null" key="From_9"/>
                      <key-binding alias="null" key="To_9"/>
                      <key-binding alias="AffirmStatus" key="To_1"/>
                      <key-binding alias="require('*/cartridge/scripts/affirm').basket.utils.checkGiftCertificates(Basket, new (require('dw/system')).Status())" key="From_1"/>
                    </pipelet-node>
                    <node-display x="0" y="1"/>
                  </node>
                  <simple-transition/>
                  <node>
                    <decision-node condition-key="!AffirmStatus.isError()" condition-operator="expr"/>
                    <node-display x="0" y="1"/>
                    <branch basename="b2" source-connector="yes">
                      <transition target-connector="in"/>
                      <segment>
                        <node>
                          <interaction-node transaction-required="false">
                            <template buffered="true" dynamic="false" name="affirm/affirmcheckout"/>
                          </interaction-node>
                          <node-display x="0" y="1"/>
                        </node>
                      </segment>
                    </branch>
                  </node>
                  <simple-transition>
                    <transition-display>
                      <bend-point relative-to="source" x="1" y="0"/>
                    </transition-display>
                  </simple-transition>
                  <node>
                    <jump-node start-name-ref="Cart-Show"/>
                    <node-display orientation="horizontal" x="1" y="0"/>
                  </node>
                </segment>
              </branch>
            </node>
            <transition target-connector="in2" target-path="../+1">
              <transition-display>
                <bend-point relative-to="source" x="4" y="0"/>
              </transition-display>
            </transition>
          </segment>
        </branch>
      </node>
      <transition target-connector="in1" target-path="./+1">
        <transition-display>
          <bend-point relative-to="source" x="4" y="0"/>
        </transition-display>
      </transition>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="2" y="3"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <end-node/>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_5">
    <segment>
      <node>
        <text-node>
          <description>Removes payment instrument and payment method if needed</description>
        </text-node>
        <node-display x="8" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="Init">
    <segment>
      <node>
        <start-node call-mode="private" name="Init" secure="false"/>
        <node-display x="8" y="2"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node custom-name="Init Affirm Payment" pipelet-name="Assign" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="true"/>
          <key-binding alias="require('*/cartridge/scripts/affirm').basket.removePaymentInstrument(Basket)" key="From_0"/>
          <key-binding alias="doIt" key="To_0"/>
          <key-binding alias="require('*/cartridge/scripts/affirm').basket.validatePayments(Basket, ApplicablePaymentMethods)" key="From_1"/>
          <key-binding alias="ApplicablePaymentMethods" key="To_1"/>
          <key-binding alias="null" key="From_2"/>
          <key-binding alias="null" key="To_2"/>
          <key-binding alias="null" key="From_3"/>
          <key-binding alias="null" key="To_3"/>
          <key-binding alias="null" key="From_4"/>
          <key-binding alias="null" key="To_4"/>
          <key-binding alias="null" key="From_5"/>
          <key-binding alias="null" key="To_5"/>
          <key-binding alias="null" key="From_6"/>
          <key-binding alias="null" key="To_6"/>
          <key-binding alias="null" key="From_7"/>
          <key-binding alias="null" key="To_7"/>
          <key-binding alias="null" key="From_8"/>
          <key-binding alias="null" key="To_8"/>
          <key-binding alias="null" key="From_9"/>
          <key-binding alias="null" key="To_9"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <end-node/>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="Tracking">
    <segment>
      <node>
        <start-node name="Tracking" secure="false"/>
        <node-display x="12" y="2"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <key-binding alias="CurrentHttpParameterMap.orderId.value || false" key="From_0"/>
          <key-binding alias="orderId" key="To_0"/>
          <key-binding alias="null" key="From_1"/>
          <key-binding alias="null" key="To_1"/>
          <key-binding alias="null" key="From_2"/>
          <key-binding alias="null" key="To_2"/>
          <key-binding alias="null" key="From_3"/>
          <key-binding alias="null" key="To_3"/>
          <key-binding alias="null" key="From_4"/>
          <key-binding alias="null" key="To_4"/>
          <key-binding alias="null" key="From_5"/>
          <key-binding alias="null" key="To_5"/>
          <key-binding alias="null" key="From_6"/>
          <key-binding alias="null" key="To_6"/>
          <key-binding alias="null" key="From_7"/>
          <key-binding alias="null" key="To_7"/>
          <key-binding alias="null" key="From_8"/>
          <key-binding alias="null" key="To_8"/>
          <key-binding alias="null" key="From_9"/>
          <key-binding alias="null" key="To_9"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <decision-node condition-key="orderId" condition-operator="expr"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="yes">
          <transition target-connector="in"/>
          <segment>
            <node>
              <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="false"/>
                <key-binding alias="require('*/cartridge/scripts/affirm')" key="From_0"/>
                <key-binding alias="affirm" key="To_0"/>
                <key-binding alias="affirm.order.trackOrderConfirmed(orderId)" key="From_1"/>
                <key-binding alias="obj" key="To_1"/>
                <key-binding alias="affirm.data.getAnalyticsStatus()" key="From_2"/>
                <key-binding alias="affirmOnlineAndAnalytics" key="To_2"/>
                <key-binding alias="JSON.stringify(obj.orderInfo)" key="From_3"/>
                <key-binding alias="orderInfo" key="To_3"/>
                <key-binding alias="JSON.stringify(obj.validated)" key="From_4"/>
                <key-binding alias="validated" key="To_4"/>
                <key-binding alias="null" key="From_5"/>
                <key-binding alias="null" key="To_5"/>
                <key-binding alias="null" key="From_6"/>
                <key-binding alias="null" key="To_6"/>
                <key-binding alias="null" key="From_7"/>
                <key-binding alias="null" key="To_7"/>
                <key-binding alias="null" key="From_8"/>
                <key-binding alias="null" key="To_8"/>
                <key-binding alias="null" key="From_9"/>
                <key-binding alias="null" key="To_9"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition/>
            <node>
              <interaction-node transaction-required="false">
                <template buffered="true" dynamic="false" name="order/trackingscript"/>
              </interaction-node>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="1" y="0"/>
        </transition-display>
      </simple-transition>
      <node>
        <end-node name="true"/>
        <node-display orientation="horizontal" x="1" y="0"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_10">
    <segment>
      <node>
        <text-node>
          <description>Checks enabling of Affirm preference's &quot;Online&quot; flag</description>
        </text-node>
        <node-display x="8" y="6"/>
      </node>
    </segment>
  </branch>
  <branch basename="OnlineStatus">
    <segment>
      <node>
        <start-node call-mode="private" name="OnlineStatus" secure="false"/>
        <node-display x="8" y="7"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <decision-node condition-key="require('*/cartridge/scripts/affirm').data.getAffirmOnlineStatus()" condition-operator="expr"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="yes">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="0" y="1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <end-node/>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="2" y="0"/>
          <bend-point relative-to="target" x="0" y="-1"/>
        </transition-display>
      </simple-transition>
      <node>
        <end-node name="offline">
          <description>offline</description>
        </end-node>
        <node-display x="1" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="Success">
    <segment>
      <node>
        <start-node name="Success" secure="false"/>
        <node-display x="4" y="11"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <call-node start-name-ref="COPlaceOrder-Start"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="0" y="1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <jump-node start-name-ref="COSummary-Start"/>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
        <branch basename="b3" source-connector="order_created">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="target" x="0" y="-1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <jump-node start-name-ref="COSummary-ShowConfirmation"/>
              <node-display x="1" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
    </segment>
  </branch>
  <branch basename="UpdateShipping">
    <segment>
      <node>
        <start-node name="UpdateShipping" secure="false"/>
        <node-display x="15" y="10"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="checkoutnow/updateShipping.js"/>
          <key-binding alias="ScriptLog" key="ScriptLog"/>
          <key-binding alias="CurrentRequest" key="CurrentRequest"/>
          <key-binding alias="obj" key="obj"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="target" x="-1" y="0"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <end-node name="error"/>
              <node-display orientation="horizontal" x="2" y="0"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="false" name="util/jsonResponse"/>
        </interaction-node>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="Confirmation">
    <segment>
      <node>
        <start-node name="Confirmation" secure="false"/>
        <node-display x="15" y="14"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="checkoutnow/confirmation.js"/>
          <key-binding alias="ScriptLog" key="ScriptLog"/>
          <key-binding alias="CurrentRequest" key="CurrentRequest"/>
          <key-binding alias="success" key="success"/>
          <key-binding alias="Order" key="order"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="target" x="-1" y="0"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <end-node name="error"/>
              <node-display orientation="horizontal" x="2" y="0"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <decision-node condition-key="success === true" condition-operator="expr"/>
        <node-display x="0" y="1"/>
        <branch basename="b3" source-connector="yes">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="0" y="1"/>
              <bend-point relative-to="target" x="0" y="-1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <jump-node start-name-ref="COSummary-ShowConfirmation"/>
              <node-display x="-1" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="2" y="0"/>
          <bend-point relative-to="target" x="0" y="-1"/>
        </transition-display>
      </simple-transition>
      <node>
        <end-node name="error"/>
        <node-display x="1" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="Cancel">
    <segment>
      <node>
        <start-node name="Cancel" secure="false"/>
        <node-display x="15" y="19"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="checkoutnow/cancel.js"/>
          <key-binding alias="ScriptLog" key="ScriptLog"/>
          <key-binding alias="CurrentRequest" key="CurrentRequest"/>
          <key-binding alias="redirect" key="redirect"/>
          <key-binding alias="obj" key="obj"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="target" x="-1" y="0"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <end-node name="error"/>
              <node-display orientation="horizontal" x="2" y="0"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <decision-node condition-key="redirect === true" condition-operator="expr"/>
        <node-display x="0" y="1"/>
        <branch basename="b3" source-connector="yes">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="0" y="1"/>
              <bend-point relative-to="target" x="0" y="-1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <jump-node start-name-ref="Cart-Show"/>
              <node-display x="-1" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition/>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="false" name="util/jsonResponse"/>
        </interaction-node>
        <node-display orientation="horizontal" x="2" y="0"/>
      </node>
    </segment>
  </branch>
  <branch basename="ApplyDiscount">
    <segment>
      <node>
        <start-node name="ApplyDiscount" secure="false"/>
        <node-display x="15" y="24"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="checkoutnow/applyDiscount.js"/>
          <key-binding alias="ScriptLog" key="ScriptLog"/>
          <key-binding alias="CurrentRequest" key="CurrentRequest"/>
          <key-binding alias="obj" key="obj"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="target" x="-1" y="0"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <end-node name="error"/>
              <node-display orientation="horizontal" x="2" y="0"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="false" name="util/jsonResponse"/>
        </interaction-node>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
</pipeline>
