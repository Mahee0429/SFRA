/**
* Represents dw.catalog.Product
*/
var Iterator = require('../util/Iterator');
var Category = require('./Category');
var ProductPriceModel = require('./ProductPriceModel');
var Product = function (ID, price, categoriesArr) {
    this.ID = ID;
    if (price) {
        this.priceModel = new ProductPriceModel(price);
    }
    if (Array.isArray(categoriesArr)) {
        this.onlineCategories = categoriesArr;
        this.onlineCategories.iterator = function () { return new Iterator(this); };
    }
};

var custom = {
    AffirmFPName: 'DefaultFinProgram',
    AffirmFPMode: 'AffirmFPMode',
    AffirmFPPriority: 0,
    AffirmFPStartDate: new Date(new Date().getTime() + (1000 * 60 * 60 * 100)),
    AffirmFPEndDate: new Date(new Date().getTime() - (1000 * 60 * 60 * 100))
};

var onlineCategories = [new Category('Men'), new Category('Suits')];
var categoryAssignments = onlineCategories.map(function (category) { return { category: category }; });
// onlineCategories.iterator = function () { return new Iterator(this); };

Product.prototype.setTestValueProductSetProducts = function () {
    this.productSetProducts = [new Product('setProduct1'), new Product('setProduct2'), new Product('setProduct3')];
};
Product.prototype.activeData = null; // ProductActiveData
Product.prototype.allCategories = null; // Collection
Product.prototype.allIncomingProductLinks = null; // Collection
Product.prototype.assignedToSiteCatalog = null; // boolean
Product.prototype.attributeModel = null; // ProductAttributeModel
Product.prototype.available = null; // boolean
Product.prototype.availableFlag = null; // boolean
Product.prototype.brand = null; // String
Product.prototype.bundle = null; // boolean
Product.prototype.bundled = null; // boolean
Product.prototype.bundledProducts = null; // Collection
Product.prototype.bundles = null; // Collection
Product.prototype.categories = null; // Collection
Product.prototype.categorized = null; // boolean
Product.prototype.categoryAssignments = null; // Collection
Product.prototype.classificationCategory = null; // Category
Product.prototype.EAN = null; // String
Product.prototype.facebookEnabled = null; // boolean
Product.prototype.ID = null; // String
Product.prototype.image = null; // MediaFile
Product.prototype.incomingProductLinks = null; // Collection
Product.prototype.longDescription = null; // MarkupText
Product.prototype.manufacturerName = null; // String
Product.prototype.manufacturerSKU = null; // String
Product.prototype.master = null; // boolean
Product.prototype.minOrderQuantity = null; // Quantity
Product.prototype.name = null; // String
Product.prototype.online = null; // boolean
Product.prototype.onlineCategories = onlineCategories; // Collection
Product.prototype.onlineFlag = null; // boolean
Product.prototype.onlineFrom = null; // Date
Product.prototype.onlineTo = null; // Date
Product.prototype.optionModel = null; // ProductOptionModel
Product.prototype.optionProduct = null; // boolean
Product.prototype.orderableRecommendations = null; // Collection
Product.prototype.pageDescription = null; // String
Product.prototype.pageKeywords = null; // String
Product.prototype.pageMetaTags = null; // Array
Product.prototype.pageTitle = null; // String
Product.prototype.pageURL = null; // String
Product.prototype.pinterestEnabled = null; // boolean
Product.prototype.priceModel = new ProductPriceModel(80); // ProductPriceModel
Product.prototype.primaryCategory = null; // Category
Product.prototype.primaryCategoryAssignment = null; // CategoryAssignment
Product.prototype.product = null; // boolean
Product.prototype.productLinks = null; // Collection
Product.prototype.productSet = null; // boolean
Product.prototype.productSetProduct = null; // boolean
Product.prototype.productSetProducts = null; // Collection
Product.prototype.productSets = null; // Collection
Product.prototype.recommendations = null; // Collection
Product.prototype.retailSet = null; // boolean
Product.prototype.searchable = null; // boolean
Product.prototype.searchableFlag = null; // boolean
Product.prototype.searchableIfUnavailableFlag = null; // boolean
Product.prototype.searchPlacement = null; // Number
Product.prototype.searchRank = null; // Number
Product.prototype.shortDescription = null; // MarkupText
Product.prototype.siteMapChangeFrequency = null; // String
Product.prototype.siteMapIncluded = null; // Number
Product.prototype.siteMapPriority = null; // Number
Product.prototype.siteProduct = null; // boolean
Product.prototype.stepQuantity = null; // Quantity
Product.prototype.storeReceiptName = null; // String
Product.prototype.storeTaxClass = null; // String
Product.prototype.taxClassID = null; // String
Product.prototype.template = null; // String
Product.prototype.thumbnail = null; // MediaFile
Product.prototype.unit = null; // String
Product.prototype.UPC = null; // String
Product.prototype.variant = false; // boolean
Product.prototype.variants = null; // Collection
Product.prototype.variationGroup = null; // boolean
Product.prototype.variationGroups = null; // Collection
Product.prototype.variationModel = null; // ProductVariationModel
Product.prototype.custom = custom;

Product.prototype.getCustom = function () { return this.custom; }; // CustomAttributes
Product.prototype.getActiveData = function () {}; // ProductActiveData
Product.prototype.getAllCategories = function () {}; // Collection
Product.prototype.getAllCategoryAssignments = function () { return categoryAssignments; }; // Collection
Product.prototype.getAllIncomingProductLinks = function () {}; // Collection
Product.prototype.getAllIncomingProductLinks = function (type) {}; // Collection
Product.prototype.getAllProductLinks = function () {}; // Collection
Product.prototype.getAllProductLinks = function (type) {}; // Collection
Product.prototype.getAllRecommendations = function (catalog, type) {}; // Collection
Product.prototype.getAvailabilityModel = function () {}; // ProductAvailabilityModel
Product.prototype.getAvailableFlag = function () {}; // boolean
Product.prototype.getBrand = function () {}; // String
Product.prototype.getBundledProductQuantity = function (aProduct) {}; // Quantity
Product.prototype.getBundledProducts = function () {}; // Collection
Product.prototype.getBundles = function () {}; // Collection
Product.prototype.getCategories = function () {}; // Collection
Product.prototype.getCategoryAssignment = function (category) {}; // CategoryAssignment
Product.prototype.getCategoryAssignments = function () {}; // Collection
Product.prototype.getClassificationCategory = function () {}; // Category
Product.prototype.getEAN = function () {}; // String
Product.prototype.getID = function () { return this.ID; }; // String
Product.prototype.getImage = function () {}; // MediaFile
Product.prototype.getImage = function (viewtype, index) {}; // MediaFile
Product.prototype.getImage = function (viewtype) {}; // MediaFile
Product.prototype.getImages = function (viewtype) {}; // List
Product.prototype.getIncomingProductLinks = function () {}; // Collection
Product.prototype.getIncomingProductLinks = function (type) {}; // Collection
Product.prototype.getLongDescription = function () {}; // MarkupText
Product.prototype.getManufacturerName = function () {}; // String
Product.prototype.getManufacturerSKU = function () {}; // String
Product.prototype.getMinOrderQuantity = function () {}; // Quantity
Product.prototype.getName = function () {}; // String
Product.prototype.getOnlineCategories = function () {}; // Collection
Product.prototype.getOnlineFlag = function () {}; // boolean
Product.prototype.getOnlineFrom = function () {}; // Date
Product.prototype.getOnlineTo = function () {}; // Date
Product.prototype.getOptionModel = function () { return null; }; // ProductOptionModel
Product.prototype.getOrderableRecommendations = function () {}; // Collection
Product.prototype.getOrderableRecommendations = function (type) {}; // Collection
Product.prototype.getPageDescription = function () {}; // String
Product.prototype.getPageKeywords = function () {}; // String
Product.prototype.getPageMetaTag = function (id) {}; // PageMetaTag
Product.prototype.getPageMetaTags = function () {}; // Array
Product.prototype.getPageTitle = function () {}; // String
Product.prototype.getPageURL = function () {}; // String
Product.prototype.getPriceModel = function () { return this.priceModel; }; // ProductPriceModel
Product.prototype.getPrimaryCategory = function () {}; // Category
Product.prototype.getPrimaryCategoryAssignment = function () {}; // CategoryAssignment
Product.prototype.getProductLinks = function () {}; // Collection
Product.prototype.getProductLinks = function (type) {}; // Collection
Product.prototype.getProductSetProducts = function () {}; // Collection
Product.prototype.getProductSets = function () {}; // Collection
Product.prototype.getRecommendations = function () {}; // Collection
Product.prototype.getRecommendations = function (type) {}; // Collection
Product.prototype.getSearchableFlag = function () {}; // boolean
Product.prototype.getSearchableIfUnavailableFlag = function () {}; // boolean
Product.prototype.getSearchPlacement = function () {}; // Number
Product.prototype.getSearchRank = function () {}; // Number
Product.prototype.getShortDescription = function () {}; // MarkupText
Product.prototype.getSiteMapChangeFrequency = function () {}; // String
Product.prototype.getSiteMapIncluded = function () {}; // Number
Product.prototype.getSiteMapPriority = function () {}; // Number
Product.prototype.getStepQuantity = function () {}; // Quantity
Product.prototype.getStoreReceiptName = function () {}; // String
Product.prototype.getStoreTaxClass = function () {}; // String
Product.prototype.getTaxClassID = function () {}; // String
Product.prototype.getTemplate = function () {}; // String
Product.prototype.getThumbnail = function () {}; // MediaFile
Product.prototype.getUnit = function () {}; // String
Product.prototype.getUPC = function () {}; // String
Product.prototype.getVariants = function () {}; // Collection
Product.prototype.getVariationGroups = function () {}; // Collection
Product.prototype.getVariationModel = function () {}; // ProductVariationModel
Product.prototype.includedInBundle = function (product) {}; // boolean
Product.prototype.isAssignedToCategory = function (category) {}; // boolean
Product.prototype.isAssignedToSiteCatalog = function () {}; // boolean
Product.prototype.isAvailable = function () {}; // boolean
Product.prototype.isBundle = function () {}; // boolean
Product.prototype.isBundled = function () {}; // boolean
Product.prototype.isCategorized = function () {}; // boolean
Product.prototype.isFacebookEnabled = function () {}; // boolean
Product.prototype.isMaster = function () {}; // boolean
Product.prototype.isOnline = function () {}; // boolean
Product.prototype.isOptionProduct = function () {}; // boolean
Product.prototype.isPinterestEnabled = function () {}; // boolean
Product.prototype.isProduct = function () {}; // boolean
Product.prototype.isProductSet = function () { return false; }; // boolean
Product.prototype.isProductSetProduct = function () {}; // boolean
Product.prototype.isRetailSet = function () {}; // boolean
Product.prototype.isSearchable = function () {}; // boolean
Product.prototype.isSiteProduct = function () {}; // boolean
Product.prototype.isVariant = function () {}; // boolean
Product.prototype.isVariationGroup = function () {}; // boolean
Product.prototype.setAvailableFlag = function (available) {}; // void
Product.prototype.setOnlineFlag = function (online) {}; // void
Product.prototype.setSearchableFlag = function (searchable) {}; // void
Product.prototype.setSearchPlacement = function (placement) {}; // void
Product.prototype.setSearchRank = function (rank) {}; // void

module.exports = Product;
